

1.*******************************************
问：MVC框架的理解
答: MVC 模式代表 Model-View-Controller（模型-视图-控制器）。
    model模型负责数据的操作。
    view视图负责数据的可视化。
    Controller（控制器）控制数据流向view视图， 并在数据变化时更新视图。
    Controller的目的在于使数据和视图解耦， 并且确保模型与视图同步。
      


2.*******************************************
问：MVP框架的理解
答:  





3.*******************************************
问：MVVM框架的理解
答: M -> model (模型), V -> view(视图),  VM ->  viewModel(视图模型).

    模型是指代表真实状态内容的领域模型（面向对象），或指代表内容的数据访问层（以数据为中心）.
    视图是用户在屏幕上看到的结构、布局和外观（UI）.
    视图模型是暴露公共属性和命令的视图的抽象, 在视图模型中，绑定器在视图和数据绑定器之间进行通信.

    视图模型的核心思想是数据的双向绑定。模型层和视图层并没有联系，而是通过视图模型来进行交互。
    
    当用户操作 View，ViewModel 感知到变化，然后通知 Model 发生相应改变；反之当 Model 发生改变，ViewModel 也能感知到变化，使 View 作出相应更新。

